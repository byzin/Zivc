/*!
  \file @kernel_set_name@.cl
  \author Sho Ikeda
  \brief No brief description

  \details
  No detailed description.

  \copyright
  Copyright (c) 2015-2021 Sho Ikeda
  This software is released under the MIT License.
  http://opensource.org/licenses/mit-license.php
  */

#ifndef ZIVC_KERNEL_SET_@kernel_set_name@_CL
#define ZIVC_KERNEL_SET_@kernel_set_name@_CL @kernel_set_number@

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wc++98-compat"
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wc++98-c++11-compat-pedantic"
//#pragma clang diagnostic push
//#pragma clang diagnostic ignored "-Wc++98-c++11-c++14-compat-pedantic"

// Definitions
#define ZIVC_GLOBAL_NAMESPACE

@kernel_inclusion_lines@

__kernel void __zivcClspvInitKernel(__global uint* outputs)
{
  size_t i = 0;
  outputs[i++] = get_work_dim();
  outputs[i++] = get_global_size(0);
  outputs[i++] = get_global_size(1);
  outputs[i++] = get_global_size(2);
  outputs[i++] = get_global_id(0);
  outputs[i++] = get_global_id(1);
  outputs[i++] = get_global_id(2);
  outputs[i++] = get_local_size(0);
  outputs[i++] = get_local_size(1);
  outputs[i++] = get_local_size(2);
  outputs[i++] = get_enqueued_local_size(0);
  outputs[i++] = get_enqueued_local_size(1);
  outputs[i++] = get_enqueued_local_size(2);
  outputs[i++] = get_local_id(0);
  outputs[i++] = get_local_id(1);
  outputs[i++] = get_local_id(2);
  outputs[i++] = get_num_groups(0);
  outputs[i++] = get_num_groups(1);
  outputs[i++] = get_num_groups(2);
  outputs[i++] = get_group_id(0);
  outputs[i++] = get_group_id(1);
  outputs[i++] = get_group_id(2);
  outputs[i++] = get_global_offset(0);
  outputs[i++] = get_global_offset(1);
  outputs[i++] = get_global_offset(2);
//  outputs[i++] = get_global_linear_id();
//  outputs[i++] = get_local_linear_id();
  outputs[i++] = get_sub_group_size();
//  outputs[i++] = get_max_sub_group_size();
  outputs[i++] = get_num_sub_groups();
//  outputs[i++] = get_enqueued_num_sub_groups();
  outputs[i++] = get_sub_group_id();
  outputs[i++] = get_sub_group_local_id();
}

static_assert(ZIVC_KERNEL_SET_@kernel_set_name@_CL == @kernel_set_number@,
              "The ID number of the kernel set isn't valid.");

#if !defined(ZIVC_GLOBAL_NAMESPACE)
static_assert(false, "The macro 'ZIVC_GLOBAL_NAMESPACE' isn't defined.");
#endif

#pragma clang diagnostic pop
#pragma clang diagnostic pop
//#pragma clang diagnostic pop

#endif /* ZIVC_KERNEL_SET_@kernel_set_name@_CL */

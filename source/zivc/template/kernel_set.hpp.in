/*!
  \file kernel_set-@kernel_set_name@.hpp
  \author Sho Ikeda
  \brief No brief description

  \details
  No detailed description.

  \copyright
  Copyright (c) 2015-2022 Sho Ikeda
  This software is released under the MIT License.
  http://opensource.org/licenses/mit-license.php
  */

#ifndef ZIVC_KERNEL_SET_@kernel_set_name@_HPP
#define ZIVC_KERNEL_SET_@kernel_set_name@_HPP

// Standard C++ library
#include <memory>
#include <vector>
// Zisc
#include "zisc/memory/std_memory_resource.hpp"
// Zivc
#include "zivc/kernel_set.hpp"
#include "zivc/zivc_config.hpp"
// Zivc CpuCL
#include "zivc/cpucl/cpucl.hpp"

namespace zivc {

/*!
  \namespace @kernel_set_name@
  \brief No brief description

  No detailed description.
  */
namespace cl {

#include "zivc/cpucl/cl_define.hpp"

// Main kernels
@kernel_inclusion_lines@

#include "zivc/cpucl/cl_undefine.hpp"

} // namespace cl

/*!
  \namespace @kernel_set_name@
  \brief No brief description

  No detailed description.
  */
namespace kernel_set {

/*!
  \brief No brief description

  No detailed description.
  */
class KernelSet_@kernel_set_name@ : public KernelSet<KernelSet_@kernel_set_name@>
{
  static constexpr char kSetName[] = "@kernel_set_name@";

 public:
  //! Return the ID number of the kernel set
  static constexpr uint64b id() noexcept
  {
    return 0x@kernel_set_number@u;
  }

  //! Load the SPIR-V code
  static void loadSpirVCode(zisc::pmr::vector<uint32b>* spirv_code_out) noexcept;

  //! Return the kernel set name
  static constexpr std::string_view name() noexcept
  {
    std::string_view n{kSetName};
    return n;
  }
};

} // namespace kernel_set

} // namespace zivc

#endif // ZIVC_KERNEL_SET_@kernel_set_name@_HPP
